{% extends 'admin.html.twig' %}

{% block title %}NingenShoppu | Intégrer une livraison{% endblock %}

{% block body %}
<div class="breadcrumb-container">
    <div class="breadcrumb flat">
        <a href="{{path('home')}}">
            <img src="{{asset('img/icons/home.svg')}}" alt="Accueil">
        </a>
        <a href="{{path('administration')}}">Administration</a>
        <a href="#">Livraisons</a>
        <a href="#" class="active">Intégrer une livraison</a>
    </div>
</div>

<h1>Intégrer une livraison</h1>

<table>
<thead>
    <tr>
    <th>{{ knp_pagination_sortable(products, 'ID', 'p.id') }}</th>
    <th>{{ knp_pagination_sortable(products, 'Libellé', 'p.wording') }}</th>
    <th>Catégorie</th>
    <th>{{ knp_pagination_sortable(products, 'Prix', 'p.price') }}</th>
    <th>{{ knp_pagination_sortable(products, 'Stock', 'p.quantityInStock') }}</th>
    <th colspan="2">Quantité reçue</th>
    </tr>
</thead>
<tbody>
    {% for product in products %}
    <tr>
        <th>
        {{product.id}}
        </th>
        <th>
        {{product.wording}}
        </th>
        <th>
        {{product.category ? product.category.title : ''}}
        </th>
        <th>
        {{product.price|amount}}
        </th>
        <th {% if product.quantityInStock <= 10 %}style="background-color:#CD0909;color:white"{% endif %}>
        {{product.quantityInStock}}
        </th>
        <th colspan="2">
            <div class="stock-btn__quantity">
                <button class="cart-stepdown" onclick="this.parentNode.querySelector('input[type=number]').stepDown()"></button>
                <input class="stock-btn__input" type="number" data-name="{{product.wording}}" data-id="{{product.id}}" id="quantity" min="0" value="0">
                <button class="cart-stepup plus" onclick="this.parentNode.querySelector('input[type=number]').stepUp()"></button>
            </div>
        </th>
    </tr>
    {% endfor %}
</tbody> 
</table>

<span class="links-removal">
    {{ knp_pagination_render(products) }}
</span>

<section class="resume">
    <h1>Résumé :</h1>

    <h2 style="margin-bottom:1rem">Transporteur :</h2>
    <input type="text" id="carrier" name="carrier" style="margin-bottom:2rem" required>

    <h2 style="margin-bottom:1rem">Liste des produits insérés :</h2>
    <ul class="resume-list">
        <!-- Injection de la liste de commande -->
    </ul>

    <a href="#" id="delivery-submit" class="btn primary">Valider la livraison</a>
</section>

<script src="{{asset('js/api/delivery.js')}}"></script>
<script>
    $(function() {
        let resumeItems = {};

        $('.page-link').click(e => {
            e.preventDefault();

            let url = new URL(document.location.href);
            let params = new URLSearchParams(url.search);

            let sortBy = params.get('sort') ?? 'none';
            let direction = params.get('direction') ?? 'none';

            page = parseInt($(e.currentTarget).text());

            $.ajax({
                url: "/api/product/getPaginated/" + page + "/" + sortBy + "/" + direction,
                method: "GET",
                success: (result) => {
                    $('li.active').removeClass('active');
                    $(e.currentTarget).parent().addClass('active');

                    let productsParsed = JSON.parse(result);
                    let currentProductRows = $('tbody').children('tr');
                    $(currentProductRows).remove();

                    $.map(productsParsed, (product) => {
                        // Permet de récupérer la quantité de chaque produit depuis la liste de résumé pour la réinjecter
                        // dans les inputs à chaque changement de page
                        let inputValue = $($('li[data-name="' + product.wording + '"]')).text();
                        let quantity = 0
                        if (inputValue) {
                            quantity = inputValue.replace(/\D/g, "") // Récupère les chiffres d'une string
                        };
                        
                        let category = '';
                        if (product.category) category = product.category['title'];

                        product = '<tr><th>' + product.id + '</th><th>' + product.wording + '</th><th>' + category + '</th><th>' + (product.price / 100) + '€</th><th>' + product.quantityInStock + '</th><th colspan="2"><div class="stock-btn__quantity"><button class="cart-stepdown" onclick="this.parentNode.querySelector(\'input[type=number]\').stepDown()"></button><input class="stock-btn__input" type="number" data-name="' + product.wording + '" data-id="' + product.id + '" id="quantity" min="0" value="'+ quantity +'"><button class="cart-stepup plus" onclick="this.parentNode.querySelector(\'input[type=number]\').stepUp()"></button></div></th></tr>';

                        $('tbody').append(product);
                    });

                    // Sur changement manuel des inputs
                    $('.stock-btn__input').change(e => {
                        onQuantityChange(e, resumeItems);
                    })

                    // Incrémentation
                    $('.cart-stepup').click(e => {
                        listIncrement(e, resumeItems)
                    })

                    // Décrémentation
                    $('.cart-stepdown').click(e => {
                        listDecrement(e, resumeItems)
                    })
                },
                error: (result) => {
                    dangerToast("Une erreur s'est produite");
                }
            })
        })


        $('.stock-btn__input').change(e => {
            onQuantityChange(e, resumeItems);
        })

        $('.cart-stepup').click(e => {
            listIncrement(e, resumeItems);
        }) 

        $('.cart-stepdown').click(e => {
            listDecrement(e, resumeItems);
        })

        $('#delivery-submit').click(e => {
            e.preventDefault();
            handleSubmit(e, resumeItems);
        })
    });
</script>
{% endblock %}
